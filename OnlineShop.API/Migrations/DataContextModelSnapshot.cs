// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineShop.API.Data;

namespace OnlineShop.API.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OnlineShop.API.Models.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<DateTime>("Created");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateOfBirthday");

                    b.Property<string>("Email");

                    b.Property<string>("Fullname");

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("Status");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("OnlineShop.API.Models.Manufacturer", b =>
                {
                    b.Property<int>("IDManufacturer")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Contact");

                    b.Property<bool?>("IsActive");

                    b.Property<string>("Name");

                    b.HasKey("IDManufacturer");

                    b.ToTable("Manufacturers");
                });

            modelBuilder.Entity("OnlineShop.API.Models.Order", b =>
                {
                    b.Property<int>("IDOrder")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<DateTime>("DeliveryDate");

                    b.Property<string>("Email");

                    b.Property<int>("IdUser");

                    b.Property<DateTime>("OrderDate");

                    b.Property<int>("OrderState");

                    b.Property<string>("Paid");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("Receiver");

                    b.HasKey("IDOrder");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("OnlineShop.API.Models.OrderDetail", b =>
                {
                    b.Property<int>("IDOrder");

                    b.Property<int>("IDProduct");

                    b.Property<int>("Quantity");

                    b.Property<decimal>("UnitPrice");

                    b.Property<int?>("orderIDOrder");

                    b.HasKey("IDOrder", "IDProduct");

                    b.HasIndex("IDProduct");

                    b.HasIndex("orderIDOrder");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("OnlineShop.API.Models.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateAdded");

                    b.Property<string>("Description");

                    b.Property<int>("IDProduct");

                    b.Property<bool>("IsMain");

                    b.Property<string>("PublicId");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.HasIndex("IDProduct");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("OnlineShop.API.Models.Product", b =>
                {
                    b.Property<int>("IDProduct")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created");

                    b.Property<string>("Description");

                    b.Property<int>("IDManufacturer");

                    b.Property<string>("Introduction");

                    b.Property<bool>("IsNew");

                    b.Property<string>("Name");

                    b.Property<decimal>("Price");

                    b.Property<int>("Quantity");

                    b.Property<DateTime>("Updated");

                    b.HasKey("IDProduct");

                    b.HasIndex("IDManufacturer");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("OnlineShop.API.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<DateTime>("Created");

                    b.Property<DateTime>("DateOfBirthday");

                    b.Property<string>("Email");

                    b.Property<string>("Fullname");

                    b.Property<DateTime>("LastActived");

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("OnlineShop.API.Models.Value", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("Values");
                });

            modelBuilder.Entity("OnlineShop.API.Models.OrderDetail", b =>
                {
                    b.HasOne("OnlineShop.API.Models.Product", "product")
                        .WithMany()
                        .HasForeignKey("IDProduct")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OnlineShop.API.Models.Order", "order")
                        .WithMany("orderDetails")
                        .HasForeignKey("orderIDOrder");
                });

            modelBuilder.Entity("OnlineShop.API.Models.Photo", b =>
                {
                    b.HasOne("OnlineShop.API.Models.Product", "product")
                        .WithMany("Photos")
                        .HasForeignKey("IDProduct")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OnlineShop.API.Models.Product", b =>
                {
                    b.HasOne("OnlineShop.API.Models.Manufacturer", "manufacturer")
                        .WithMany("products")
                        .HasForeignKey("IDManufacturer")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
